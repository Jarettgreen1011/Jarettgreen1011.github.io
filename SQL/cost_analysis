Table of contents
1. Business task

2. Analysis 
   2a. Calculate selling fees as a percentage of total sales for each platform
   2b. Calculate shipping costs as a percentage of total sales for each platform

3. Results
   3a. Selling fees
   3b. Shipping costs

4. Assumptions and limitations

5. Appendix - Table creation
   5aa. Create ebay_all_listings_08_15_2024 table
      5ab. Populate ebay_all_listings_08_15_2024 table
         5ac. Inspect import to ebay_all_listings_08_15_2024 table
   5ba. Create ebay_listings_sales_report_july_2024 table 
      5bb. Populate ebay_listings_sales_report_july_2024 table
         5bc. Inspect import to ebay_listings_sales_report_july_2024 table
   5ca. Create amazon_fees_and_proceeds_july_2024 table
      5cb. Populate amazon_fees_and_proceeds_july_2024 table
         5cc. Inspect import to amazon_fees_and_proceeds_july_2024 table
   5da. Create amazon_orders_july_2024 table 
      5db. Populate amazon_orders_july_2024 table
         5dc. Inspect import to amazon_orders_july_2024 table
   5ea. Create amazon_daily_sales_july_2024 table
      5eb. Populate amazon_daily_sales_july_2024 table
         5ec. Inspect import to amazon_daily_sales_july_2024 table

Report
1. Business task: Compare and contrast cost of using Amazon vs. eBay as selling platforms using July 2024 sales as a sample

2. Analysis
2a. Calculate selling fees as a percentage of total sales for each platform
-- Amazon
SELECT (SUM(refferal_fee_total) / (SUM(refferal_fee_total) + SUM(net_proceeds_total))) * 100
FROM amazon_fees_and_proceeds_july_2024;

-- eBay (selling fees consist of an insertion fee and a percentage of every order)
WITh insertion_fee AS
	(SELECT ((COUNT(*) - 250) * 0.05) AS insertion_fee --first 250 are free
	FROM ebay_all_listings_08_15_2024)

SELECT ((SUM(total_selling_costs) - SUM(shipping_labels_cost) + (SELECT insertion_fee FROM insertion_fee)) / (SUM(item_sales) - SUM(shipping_labels_cost))) * 100 
FROM ebay_listing_sales_report_july_2024;

-- Question about data:
-- What does item_sales column consist of?
-- Result: item_sales = net_proceeds + total_selling_costs
-- total_selling_costs = shipping_labels_cost + what eBay calls it's 'final value fee'
-- Use: Must deduct shipping_labels_cost from total sales because we are providing that and not the customer
SELECT (net_proceeds + total_selling_costs - shipping_labels_cost) AS item_sales_no_ship,
	(net_proceeds + total_selling_costs) AS item_sales_w_ship,
	item_sales
FROM ebay_listing_sales_report_july_2024;

2b. Calculate shipping costs as a percentage of total sales for each platfrom
-- Amazon
SELECT ((COUNT(DISTINCT amazon_order_id) * 7) / SUM(item_price)) * 100
FROM amazon_orders_july_2024
WHERE order_status NOT LIKE 'Cancelled';

-- Question about data:
-- amazon_orders_july_2024 table contains duplicated order ids because orders are partitioned by item and orders often contain different items
-- item_price did not correctly represent the true price of the item but rather represented the true price * quantity ordered
-- Because of this discrepancy, I gathered all rows with duplicated order ids 
   to see whether the item_price was the true price of that one item * the quantity ordered 
   or if it was simply the sum of all item's true prices * the quantity ordered 
-- Result: Each unique row/item per order contained its true price * quantity ordered
-- Use: Safe to use SUM(item_price) to represent total sales
SELECT *
FROM amazon_orders_july_2024
WHERE amazon_order_id IN
	(SELECT amazon_order_id
	FROM public.amazon_orders_july_2024
	GROUP BY amazon_order_id
	HAVING COUNT(amazon_order_id) > 1);

-- eBay
SELECT (SUM(shipping_labels_cost) / (SUM(item_sales) - SUM(shipping_labels_cost))) * 100
FROM ebay_listing_sales_report_july_2024;

-- Question about the data:
-- While eBay does report shipping_labels_cost, they also partition their report by item
-- eBay does not include an order id in their report so it is guesswork as to what items consist of the same order
-- Because of this I looked at whether every item consists of a shipping_labels_cost entry as that would show that there are duplicates
-- Result: Missing shipping_labels_cost data certain items 
   can be inferred to mean that shipping_labels_cost is not duplicated for orders consisting of multiple items
-- Use: Safe to use SUM(shipping_labels_cost) as total shipping_labels_cost
SELECT COUNT(shipping_labels_cost)
FROM ebay_listing_sales_report_july_2024
WHERE shipping_labels_cost = 0;

3. Results: 
3a. Selling fees
3b. Shipping costs

4. Assumptions and limitations: 
4a. Amazon's problem with ASINs
-- Amazon has a problem with reporting on items with missing ASINs and this only seems to occur with some of their reports. 
-- The amazon_fees_and_proceeds_july_2024 table purportedly contains all our listings 
   but, the total number of rows is about half of that number, which is why I chose to look at percentages as opposed to 
   actual values, besides its benefits when comparing two differing datasets (Amazon and eBay). 
-- This problem was discovered during a different analysis and required the composition of a special report by Amazon 
   that actually composed of all our listings. When comparing this special report to other Amazon reports that failed 
   to capture all listings but purported to, the missing listings always contained a missing ASIN. 
-- To ensure that the amazon_orders_july_2024 table, which contains an ASIN column, was not missing rows, I compared 
   the calculated total sales value using this table to amazon_daily_sales_july_2024, which is a table that does not
   include specific items and their ASINs 
-- Result: The amazon_orders_july_2024 report/table was not affected by the ASIN problem discussed above 
WITH total_sales_1 AS 
	(SELECT SUM(ordered_product_sales) AS total_sales_1
	FROM amazon_daily_sales_july_2024),
total_sales_2 AS 
	(SELECT SUM(item_price) AS total_sales_2
	FROM amazon_orders_july_2024
	WHERE order_status NOT LIKE 'Cancelled')

SELECT total_sales_1 AS total_sales_comp
FROM total_sales_1
UNION
SELECT total_sales_2
FROM total_sales_2;

4b. Amazon's missing data on shipping labels
-- Amazon does not provide a report with data on the cost of shipping labels purchased by the business for the customer
-- The number 7 is used as the approximate average cost of shipping labels per order as supplied by business owner 

5. Appendix
5aa. Create ebay_all_listings_08_15_2024 table
CREATE TABLE ebay_all_listings_08_15_2024 (
	title text,
	custom_label text,
	available_quantity smallint,
	start_price float,
	current_price float,
	sold_quantity smallint,
	start_date timestamp,
	condition text
);

5ab. Populate ebay_all_listings_08_15_2024 table
COPY ebay_all_listings_08_15_2024
FROM 'C:\Users\Public\ebay_all_listings_08_15_2024.csv'
CSV HEADER;

5ac. Inspect import to ebay_all_listings_08_15_2024 table
SELECT *
FROM ebay_all_listings_08_15_2024;

5ba. Create ebay_listings_sales_report_july_2024 table 
CREATE TABLE ebay_listings_sales_report_july_2024 (
	listing_title text,
	quantity_sold smallint,
	total_sales_including_taxes float,
	item_sales float,
	taxes float,
	total_selling_costs float,
	shipping_labels_cost float,
	net_proceeds float,
	average_selling_price float
);

5bb. Populate ebay_listings_sales_report_july_2024 table
COPY ebay_listing_sales_report_july_2024
FROM 'C:\Users\Public\ebay_listing_sales_report_july_2024.csv'
CSV HEADER;

5bc. Inspect import to ebay_listings_sales_report_july_2024 table
SELECT *
FROM ebay_listing_sales_report_july_2024;

5ca. Create amazon_fees_and_proceeds_july_2024 table
CREATE TABLE amazon_fees_and_proceeds_july_2024 (
	asin text,
	refferal_fee_total float,
	net_proceeds_total float
);

5cb. Populate amazon_fees_and_proceeds_july_2024 table
COPY amazon_fees_and_proceeds_july_2024
FROM 'C:\Users\Public\amazon_fees_and_proceeds_july_2024.csv'
CSV HEADER;

5cc. Inspect import to amazon_fees_and_proceeds_july_2024 table
SELECT *
FROM amazon_fees_and_proceeds_july_2024;

5da. Create amazon_orders_july_2024 table 
CREATE TABLE amazon_orders_july_2024 (
	amazon_order_id text,
	purchase_date timestamp,
	order_status text,
	product_name text,
	sku text,
	asin text,
	item_status text,
	quantity smallint,
	currency text,
	item_price float,
	item_tax float,
	ship_city text,
	ship_state text,
	ship_postal_code text,
	ship_country text
);

5db. Populate amazon_orders_july_2024 table
COPY amazon_orders_july_2024
FROM 'C:\Users\Public\amazon_orders_july_2024.csv'
CSV HEADER;

5dc. Inspect import to amazon_orders_july_2024 table
SELECT *
FROM amazon_orders_july_2024;

5ea. Create amazon_daily_sales_july_2024 table
CREATE TABLE amazon_daily_sales_july_2024 (
	date date,
	ordered_product_sales float,
	units_ordered smallint,
	average_selling_price float
);

5eb. Populate amazon_daily_sales_july_2024 table
COPY amazon_daily_sales_july_2024
FROM 'C:\Users\Public\amazon_daily_sales_july_2024.csv'
CSV HEADER;

5ec. Inspect import to amazon_daily_sales_july_2024 table
SELECT *
FROM amazon_daily_sales_july_2024;
