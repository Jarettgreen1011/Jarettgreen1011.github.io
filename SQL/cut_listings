CREATE TABLE orders_past_90_days_12032024 (
	order_id text,
	sku text,
	product_name text,
	quantity_purchased smallint,
	item_price float
);

COPY orders_past_90_days_12032024
FROM 'C:\Users\Public\Data analysis\Trim listings\orders_past_90_days_12032024.csv'
CSV HEADER;

SELECT *
FROM orders_past_90_days_12032024;

SELECT sku, product_name, item_price, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
FROM orders_past_90_days_12032024
GROUP BY sku, product_name, quantity_purchased, item_price
HAVING item_price < 12.99
ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC, item_price DESC;

this resulted in duplicates, the distinct number of sku's was less than number of rows generated by query, this is because skus sold at multiple prices when using group by
SELECT COUNT(DISTINCT sku)
FROM (SELECT sku, product_name, item_price, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
	FROM orders_past_90_days_12032024
	GROUP BY sku, product_name, quantity_purchased, item_price
	HAVING item_price < 12.99
	ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC, item_price DESC);

so I tried this
SELECT sku, product_name, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
FROM (SELECT *
	FROM orders_past_90_days_12032024 
	WHERE item_price < 12.99 AND item_price > 0)
GROUP BY sku, product_name
ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC;

but this also resulted in duplicates because the product name had also changed 
SELECT COUNT(DISTINCT sku)
FROM (SELECT sku, product_name, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
	FROM (SELECT *
		FROM orders_past_90_days_12032024 
		WHERE item_price < 12.99 AND item_price > 0)
	GROUP BY sku, product_name
	ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC);

resulted in no duplicates 
SELECT sku, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
FROM (SELECT *
	FROM orders_past_90_days_12032024 
	WHERE item_price < 12.99 AND item_price > 0)
GROUP BY sku
ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC;


in order to supply most recent produt name, price, and asin associated with sku I had to join with other data source 
CREATE TABLE listings_report_12032024 (
	seller_sku text,
	asin text,
	item_name text,
	price float,
	quantity smallint
);

COPY listings_report_12032024
FROM 'C:\Users\Public\Data analysis\Trim listings\listings_report_12032024.csv'
CSV HEADER;

SELECT *
FROM listings_report_12032024;

had to reasjust pricing because some items that had sold cheaply previously are currently above the 12.99 threshold of current analysis 
SELECT sku, listings.asin, listings.item_name, listings.price, COUNT(sku) AS times_ordered, SUM(quantity_purchased) AS quantity_purchased
FROM (SELECT *
	FROM orders_past_90_days_12032024 
	WHERE item_price < 12.99 AND item_price > 0) AS orders
LEFT JOIN listings_report_12032024 AS listings ON orders.sku = listings.seller_sku
GROUP BY sku, listings.asin, listings.item_name, listings.price
HAVING listings.price < 12.99
ORDER BY COUNT(sku) DESC, SUM(quantity_purchased) DESC, listings.price DESC;
